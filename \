import os
from markdown_to_blocks import markdown_to_html_node, extract_title

def generate_page(from_path, template_path, dest_path):
    print("hit from generator")
    print(f"Generating page from \"{from_path}\" to \"{dest_path}\" using \"{template_path}\".")
    with open(from_path) as file:
        page_contents = file.read()
        #print(f"page contents: {page_contents}")
        parent_node = markdown_to_html_node(page_contents)
        html_string = parent_node.to_html()
        page_title = extract_title(page_contents)

    with open(template_path) as file:
        template = file.read()
        with_title = template.replace("{{ Title }}", page_title)
        with_content = with_title.replace("{{ Content }}", html_string)

    os.makedirs(os.path.dirname(dest_path), exist_ok=True)

    with open(dest_path, "w") as file:
        file.write(with_content)


def generate_pages_recursive(dir_path_content, template_path, dest_dir_path):
    print("hi from base case")
    if os.path.isfile(dir_path_content):
        print(f"!!html test: {dir_path_content}")
        generate_page(dir_path_content, template_path, dest_dir_path)
        return

    if os.path.isdir(dir_path_content):
        if not os.path.exists(dest_dir_path):
           os.mkdir(dest_dir_path)

        for item in os.listdir(dir_path_content):
            print("hi from recursive")
            content_item_path = os.path.join(dir_path_content , item)
            dest_item_path = os.path.join(dest_dir_path, item)
            generate_pages_recursive(content_item_path, template_path, dest_item_path)
